---
import { readAll } from "../lib/markdoc/read";
import { blog, books, journal, notes, newsletters } from "../lib/markdoc/frontmatter.schema";

const posts = await readAll({
  directory: "posts",
  frontmatterSchema: blog,
});

const sortedPosts = posts
  .filter((p) => p.frontmatter.draft !== true)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  )
  .slice(0,3);

const bookNotes = await readAll({
  directory: "books",
  frontmatterSchema: books,
});

const sortedBookNotes = bookNotes
  .filter((p) => p.frontmatter.draft !== true)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  ).slice(0, 3);

const mediations = await readAll({
  directory: "newsletter/mediations",
  frontmatterSchema: newsletters,
});

const sortedMediations = mediations
  .filter((p) => p.frontmatter.draft !== true)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  )
  .slice(0,1);

const journalEntries = await readAll({
  directory: "journal",
  frontmatterSchema: journal,
});

const sortedJournalEntries = journalEntries
  .filter((p) => p.frontmatter.draft !== true)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  ).slice(0, 3);

  const zettels = await readAll({
  directory: "notes",
  frontmatterSchema: notes,
});

const sortedNotes = zettels
  .filter((p) => p.frontmatter.draft !== true)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  ).slice(0, 3);

---

<p class="mb-5">I used to think reading would help me learn. One day, ten pages before finishing a book, I realized I had read that book before. At that point, I decided to change a few things.</p>

<p class="mb-10">On this website, you'll find how I evolved, what I learned, and my reflections on the complicated life and how I navigate my life with things I mentioned above.</p>

<h2 class="mb-5">Want the longer story? <small>See <a href="/about/">my "about" page</a>.</small></h2>

<h2  class="mb-20">What am I Doing Now? <small>See <a href="/now/">my "now" page</a>.</small></h2>

<h2 class="fa-xl mb-5">Newest Posts <small><a href="/posts/">SEE ALL</a></small></h2>
<ul>
  {
    sortedPosts.map((post) => {
      const formattedDate = new Date(
        post.frontmatter.date
      ).toISOString().slice(0,10);


      return (
        <li class="grid grid-cols-[1fr] md:grid-cols-[1fr_auto] mb-3 md:gap-2 items-start">
          <div class="title">
            <a
              href={`/${post.slug}`}
              class="unset
                  transition-[background-size] duration-300
                  bg-gradient-to-r bg-left-bottom bg-no-repeat
                  bg-[length:0%_55%] hover:bg-[length:100%_55%] dark:bg-[length:0%_2px] hover:dark:bg-[length:100%_2px]
                  from-primary-blue to-primary-blue dark:from-primary-blue dark:to-primary-blue
                "
            >
              {post.frontmatter.title}
            </a>
          </div>
          <div class="text-text-muted text-sm italic pt-1">
            <time datetime={post.frontmatter.date.toISOString()}>
              {formattedDate}
            </time>
          </div>
        </li>
      );
    })
  }
</ul>

<h2 class="fa-xl mt-20 mb-5">Journal <small><a href="/journal/">SEE ALL</a></small></h2>
<ul>
  {
    sortedJournalEntries.map((journalEntry) => {
      const formattedDate = new Date(
      journalEntry.frontmatter.date
      ).toISOString().slice(0,10);


      return (
        <li class="grid grid-cols-[1fr] md:grid-cols-[1fr_auto] mb-3 md:gap-2 items-start">
          <div class="title">
            {journalEntry.frontmatter.external ? (
              <a
                href={`/journal/${journalEntry.slug}`}
                target="_blank"
                class="unset
                    transition-[background-size] duration-300
                    bg-gradient-to-r bg-left-bottom bg-no-repeat
                    bg-[length:0%_55%] hover:bg-[length:100%_55%] dark:bg-[length:0%_2px] hover:dark:bg-[length:100%_2px]
                    from-primary-blue to-primary-blue dark:from-primary-blue dark:to-primary-blue
                  "
              >
                <span>{journalEntry.frontmatter.title}</span>
                <span>
                  <i class="ml-1 mr-1 text-[12px] pb-2 fa-solid fa-up-right-from-square" />
                </span>
              </a>
            ) : (
              <a
                href={`/journal/${journalEntry.slug}`}
                class="unset
                    transition-[background-size] duration-300
                    bg-gradient-to-r bg-left-bottom bg-no-repeat
                    bg-[length:0%_55%] hover:bg-[length:100%_55%] dark:bg-[length:0%_2px] hover:dark:bg-[length:100%_2px]
                    from-primary-blue to-primary-blue dark:from-primary-blue dark:to-primary-blue
                  "
              >
                {journalEntry.frontmatter.title}
              </a>
            )}
          </div>
          <div class="text-text-muted text-sm italic pt-1">
            <time datetime={journalEntry.frontmatter.date.toISOString()}>
              {formattedDate}
            </time>
          </div>
        </li>
      );
    })
  }
</ul>

<h2 class="fa-xl mb-5 mt-20">Notes <small><a href="/notes/">SEE ALL</a></small></h2>
<p>These notes are in my Slip-Box in my Zettelkasten. We can call them as Digital Garden as well but I prefer calling the whole system Zettelkasten.</p>
<ul>
  {
    sortedNotes.map((zettel) => {
      const formattedDate = new Date(
        zettel.frontmatter.date
      ).toISOString().slice(0,10);


      return (
        <li class="grid grid-cols-[1fr] md:grid-cols-[1fr_auto] mb-3 md:gap-2 items-start">
          <div class="title">
            <a
              href={`/notes/${zettel.slug}`}
              class="unset
                  transition-[background-size] duration-300
                  bg-gradient-to-r bg-left-bottom bg-no-repeat
                  bg-[length:0%_55%] hover:bg-[length:100%_55%] dark:bg-[length:0%_2px] hover:dark:bg-[length:100%_2px]
                  from-primary-blue to-primary-blue dark:from-primary-blue dark:to-primary-blue
                "
            >
              {zettel.frontmatter.zettelId}: {zettel.frontmatter.title}
            </a>
          </div>
          <div class="text-text-muted text-sm italic pt-1">
            <time datetime={zettel.frontmatter.date.toISOString()}>
              {formattedDate}
            </time>
          </div>
        </li>
      );
    })
  }
</ul>

<h2 class="fa-xl mt-20 mb-5">Book Notes <small><a href="/books/">SEE ALL</a></small></h2>
<p>I share either a full book review or a single-chapter note from the books I read.</p>
<ul>
  {
    sortedBookNotes.map((note) => {
      const formattedDate = new Date(
      note.frontmatter.date
      ).toISOString().slice(0,10);


      return (
        <li class="grid grid-cols-[1fr] md:grid-cols-[1fr_auto] mb-3 md:gap-2 items-start">
          <div class="title">
            <a
              href={`/books/${note.slug}`}
              class="unset
                  transition-[background-size] duration-300
                  bg-gradient-to-r bg-left-bottom bg-no-repeat
                  bg-[length:0%_55%] hover:bg-[length:100%_55%] dark:bg-[length:0%_2px] hover:dark:bg-[length:100%_2px]
                  from-primary-blue to-primary-blue dark:from-primary-blue dark:to-primary-blue
                "
            >
              {note.frontmatter.title}
            </a>
          </div>
          <div class="text-text-muted text-sm italic pt-1">
            <time datetime={note.frontmatter.date.toISOString()}>
              {formattedDate}
            </time>
          </div>
        </li>
      );
    })
  }
</ul>

<h2 class="fa-xl mb-5 mt-20">Mediations Newsletter</h2>
<p>I share what I feel about multiple aspects and constraints of the complicated life and my search for the balance between leadership, software engineering, personal life, and the world.</p>

<p class="fa-m mt-5">
  <b>Latest Issue:</b>
  <ul>
    {
      sortedMediations.map((mediation) => {
        const formattedDate = new Date(
          mediation.frontmatter.date
        ).toISOString().slice(0,10);


        return (
          <li class="grid grid-cols-[1fr] md:grid-cols-[1fr_auto] mb-3 md:gap-2 items-start">
            <div class="title">
              <a
                href={`/newsletter/${mediation.slug}`}
                class="unset
                    transition-[background-size] duration-300
                    bg-gradient-to-r bg-left-bottom bg-no-repeat
                    bg-[length:0%_55%] hover:bg-[length:100%_55%] dark:bg-[length:0%_2px] hover:dark:bg-[length:100%_2px]
                    from-primary-blue to-primary-blue dark:from-primary-blue dark:to-primary-blue
                  "
              >
                {mediation.frontmatter.title}
              </a>
            </div>
            <div class="text-text-muted text-sm italic pt-1">
              <time datetime={mediation.frontmatter.date.toISOString()}>
                {formattedDate}
              </time>
            </div>
          </li>
        );
      })
    }
  </ul>
</p>

<form name="newsletter-subscription-home"  class="mt-5" netlify-honeypot="bot-field" netlify>
  <p>
    <p class="mb-5">You can give me your email and I can add you to my list.</p>

    <label>Email:
      <input
        type="email"
        name="email"
        placeholder="contact@candost.blog"
        class="font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 border focus:outline-none dark:focus:ring-primary-blue"
        style="color:black">
    </label>

    <button
      type="submit"
      class="text-black bg-primary-yellow hover:bg-primary-blue focus:ring-4 focus:ring-primary-blue font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-primary-yellow dark:hover:bg-primary-green focus:outline-none dark:focus:ring-primary-blue">
      Add me to the list
    </button>
  </p>
</form>
