---
import {sortPostsByDate} from "../..//utils/sortPostsByDate";
import {getCollectionByName} from "../../utils/getCollectionByName";
import BlogPost from '../../layouts/BlogPost.astro'
import {comment} from "../../consts";
import {formatDate} from '../../utils/formatDate'
import PostTitle from "../../components/PostTitle.astro";
import BlogFooter from "../../components/BlogFooter.astro";

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollectionByName("journal");
  return posts.map((post) => ({
    params: {slug: post.slug},
    props: post,
  }));
}

const post = Astro.props;
const {Content} = await post.render();
const posts = await getCollectionByName("journal");
const sortPosts = sortPostsByDate(posts);

let postUpdateDate = post.data.updateDate ? formatDate(post.data.updateDate) : '';

const currentPostIndex = sortPosts.findIndex(
(postItem) => postItem.data.date === post.data.date
);
let prevPost: any, nextPost: any;
if (sortPosts[currentPostIndex - 1]) {
  prevPost = sortPosts[currentPostIndex - 1];
}
if (sortPosts[currentPostIndex + 1]) {
  nextPost = sortPosts[currentPostIndex + 1];
}
---

<BlogPost frontmatter={post.data}>
  {
    (
    <PostTitle slug={`/journal/${post.slug}`} {...post.data} lastModified={postUpdateDate}></PostTitle>
    <div class="flex items-center mb-2">
      {comment.enable && comment.type === "waline" && comment.pageview && (
      <div class="divider-vertical"/>
      <a href="#" title="Current Page Views" class="flex items-center">
        <i class="ri-fire-fill mr-1"/>
        <span class="waline-pageview-count" data-path={post.collection == 'posts' ? "" : '/' + post.collection + '/' + post.slug}/>
      </a>
      <div class="divider-vertical"/>
      <a href="#waline" title="Number of Comments" class="flex items-center">
        <i class="ri-discuss-fill mr-1"/>
        <span class="waline-comment-count" data-path={post.collection == 'posts' ? "" : '/' + post.collection + '/' + post.slug}/>
      </a>
      )}
    </div>
    )
  }
  <div class="divider-horizontal"></div>
  <article class="markdown-body scroll-smooth mb-4">
    <Content/>
  </article>
  <div class="divider-horizontal"></div>
  <div class="h-8 text-skin-base">
    {
      (
      <div>
        {prevPost ? (
          <a
          class="truncate  w-auto max-w-[40%] float-left"
          href={prevPost.collection == 'posts' ? "" : '/' + prevPost.collection + '/' + prevPost.slug}
          title={prevPost.data.title}
          >
          <i class="ri-arrow-left-s-fill"/>
          {prevPost.data.title}
        </a>
        ) : (
        <div/>
        )}
        {nextPost ? (
          <div class="flex item-center float-right w-auto max-w-[40%] text-right">
            <a
            class="truncate "
            href={nextPost.collection == 'posts' ? "" : '/' + nextPost.collection + '/' + nextPost.slug}
            title={nextPost.data.title}
            >
            {nextPost.data.title}
          </a>
          <i class="ri-arrow-right-s-fill float-right"/>
        </div>
        ) : (
        <div/>
        )}
      </div>
      )
    }
  </div>
  <BlogFooter
  title={post.data.title}
  url={post.collection == 'posts' ? post.slug : post.collection + '/' + post.slug}
  date={post.data.date}>
</BlogFooter>
</BlogPost>
